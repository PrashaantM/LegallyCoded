{"ast":null,"code":"var _jsxFileName = \"/Users/jessicagoel/LegallyCoded-2/lexiai/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios';\n\n// Configure global axios defaults (used by components that don't use custom instances)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:5000';\n// Remove withCredentials since we're allowing all origins\n// axios.defaults.withCredentials = true;\naxios.defaults.headers.common['Content-Type'] = 'application/json';\naxios.defaults.headers.common['Accept'] = 'application/json';\n\n// Add interceptors for debugging\naxios.interceptors.request.use(request => {\n  // Don't log sensitive data\n  const requestCopy = {\n    ...request\n  };\n  if (requestCopy.data) {\n    if (requestCopy.data.password) {\n      requestCopy.data = {\n        ...requestCopy.data,\n        password: '******'\n      };\n    }\n  }\n  console.log('Starting Request:', requestCopy);\n  return request;\n});\naxios.interceptors.response.use(response => {\n  console.log('Response Success:', response.status, response.data);\n  return response;\n}, error => {\n  console.error('Response Error:', error.message, error.response ? {\n    status: error.response.status,\n    data: error.response.data\n  } : 'No response');\n  return Promise.reject(error);\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","axios","jsxDEV","_jsxDEV","defaults","baseURL","headers","common","interceptors","request","use","requestCopy","data","password","console","log","response","status","error","message","Promise","reject","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/jessicagoel/LegallyCoded-2/lexiai/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios';\n\n// Configure global axios defaults (used by components that don't use custom instances)\naxios.defaults.baseURL = 'http://localhost:5000';\n// Remove withCredentials since we're allowing all origins\n// axios.defaults.withCredentials = true;\naxios.defaults.headers.common['Content-Type'] = 'application/json';\naxios.defaults.headers.common['Accept'] = 'application/json';\n\n// Add interceptors for debugging\naxios.interceptors.request.use(request => {\n  // Don't log sensitive data\n  const requestCopy = {...request};\n  if (requestCopy.data) {\n    if (requestCopy.data.password) {\n      requestCopy.data = {...requestCopy.data, password: '******'};\n    }\n  }\n  console.log('Starting Request:', requestCopy);\n  return request;\n});\n\naxios.interceptors.response.use(\n  response => {\n    console.log('Response Success:', response.status, response.data);\n    return response;\n  },\n  error => {\n    console.error('Response Error:', \n      error.message, \n      error.response ? {status: error.response.status, data: error.response.data} : 'No response'\n    );\n    return Promise.reject(error);\n  }\n);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAF,KAAK,CAACG,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAChD;AACA;AACAJ,KAAK,CAACG,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAG,kBAAkB;AAClEN,KAAK,CAACG,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,QAAQ,CAAC,GAAG,kBAAkB;;AAE5D;AACAN,KAAK,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAACD,OAAO,IAAI;EACxC;EACA,MAAME,WAAW,GAAG;IAAC,GAAGF;EAAO,CAAC;EAChC,IAAIE,WAAW,CAACC,IAAI,EAAE;IACpB,IAAID,WAAW,CAACC,IAAI,CAACC,QAAQ,EAAE;MAC7BF,WAAW,CAACC,IAAI,GAAG;QAAC,GAAGD,WAAW,CAACC,IAAI;QAAEC,QAAQ,EAAE;MAAQ,CAAC;IAC9D;EACF;EACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,WAAW,CAAC;EAC7C,OAAOF,OAAO;AAChB,CAAC,CAAC;AAEFR,KAAK,CAACO,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC7BM,QAAQ,IAAI;EACVF,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAACC,MAAM,EAAED,QAAQ,CAACJ,IAAI,CAAC;EAChE,OAAOI,QAAQ;AACjB,CAAC,EACDE,KAAK,IAAI;EACPJ,OAAO,CAACI,KAAK,CAAC,iBAAiB,EAC7BA,KAAK,CAACC,OAAO,EACbD,KAAK,CAACF,QAAQ,GAAG;IAACC,MAAM,EAAEC,KAAK,CAACF,QAAQ,CAACC,MAAM;IAAEL,IAAI,EAAEM,KAAK,CAACF,QAAQ,CAACJ;EAAI,CAAC,GAAG,aAChF,CAAC;EACD,OAAOQ,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,MAAMI,IAAI,GAAGxB,QAAQ,CAACyB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTvB,OAAA,CAACN,KAAK,CAAC8B,UAAU;EAAAC,QAAA,eACfzB,OAAA,CAACJ,GAAG;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACA;AACA;AACAhC,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}