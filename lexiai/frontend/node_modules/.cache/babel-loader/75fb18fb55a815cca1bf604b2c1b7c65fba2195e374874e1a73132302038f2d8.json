{"ast":null,"code":"var _jsxFileName = \"/Users/jessicagoel/LegallyCoded-2/lexiai/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Create a custom axios instance with specific config for auth requests\nconst authAxios = axios.create({\n  baseURL: 'http://localhost:5000',\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is stored in localStorage\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setCurrentUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    try {\n      // Use the custom axios instance\n      const response = await authAxios.post('/api/auth/login', {\n        username,\n        password\n      });\n      console.log('Login response:', response.data);\n\n      // Create a user object from the response\n      const user = {\n        id: response.data.user_id,\n        username: response.data.username\n      };\n      setCurrentUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed. Check your credentials and try again.'\n      };\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      // Use the custom axios instance\n      const response = await authAxios.post('/api/auth/register', {\n        username,\n        email,\n        password\n      });\n      console.log('Register response:', response.data);\n      return {\n        success: true,\n        message: response.data.message\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed. Please try again with different credentials.'\n      };\n    }\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n  };\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!currentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","authAxios","create","baseURL","withCredentials","headers","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","storedUser","localStorage","getItem","JSON","parse","login","username","password","response","post","console","log","data","user","id","user_id","setItem","stringify","success","error","_error$response","_error$response$data","message","register","email","_error$response2","_error$response2$data","logout","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jessicagoel/LegallyCoded-2/lexiai/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const AuthContext = createContext();\n\n// Create a custom axios instance with specific config for auth requests\nconst authAxios = axios.create({\n  baseURL: 'http://localhost:5000',\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is stored in localStorage\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setCurrentUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      // Use the custom axios instance\n      const response = await authAxios.post('/api/auth/login', { \n        username, \n        password \n      });\n      \n      console.log('Login response:', response.data);\n      \n      // Create a user object from the response\n      const user = {\n        id: response.data.user_id,\n        username: response.data.username\n      };\n      \n      setCurrentUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n      return { success: true };\n    } catch (error) {\n      console.error('Login error:', error);\n      return { \n        success: false, \n        message: error.response?.data?.error || 'Login failed. Check your credentials and try again.'\n      };\n    }\n  };\n\n  const register = async (username, email, password) => {\n    try {\n      // Use the custom axios instance\n      const response = await authAxios.post('/api/auth/register', {\n        username,\n        email,\n        password\n      });\n      \n      console.log('Register response:', response.data);\n      return { success: true, message: response.data.message };\n    } catch (error) {\n      console.error('Registration error:', error);\n      return { \n        success: false, \n        message: error.response?.data?.error || 'Registration failed. Please try again with different credentials.'\n      };\n    }\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n  };\n\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!currentUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}