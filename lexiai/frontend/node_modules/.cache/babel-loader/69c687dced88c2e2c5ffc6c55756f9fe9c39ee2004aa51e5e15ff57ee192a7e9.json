{"ast":null,"code":"var _jsxFileName = \"/Users/jessicagoel/LegallyCoded-2/lexiai/frontend/src/components/documents/DocumentGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Form, Button, Card, Alert, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport { AuthContext } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DocumentGenerator = () => {\n  _s();\n  const [documentTypes, setDocumentTypes] = useState([]);\n  const [selectedType, setSelectedType] = useState('');\n  const [parameters, setParameters] = useState([]);\n  const [formValues, setFormValues] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [typesLoading, setTypesLoading] = useState(true);\n  const [parametersLoading, setParametersLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [generatedDocument, setGeneratedDocument] = useState(null);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  // Fetch document types on component mount\n  useEffect(() => {\n    const fetchDocumentTypes = async () => {\n      try {\n        const response = await axios.get('/api/documents/types');\n        setDocumentTypes(response.data);\n      } catch (error) {\n        console.error('Error fetching document types:', error);\n        setError('Failed to load document types');\n      } finally {\n        setTypesLoading(false);\n      }\n    };\n    fetchDocumentTypes();\n  }, []);\n\n  // Fetch parameters when document type is selected\n  useEffect(() => {\n    if (!selectedType) return;\n    const fetchParameters = async () => {\n      setParametersLoading(true);\n      try {\n        const response = await axios.get(`/api/documents/parameters/${selectedType}`);\n        setParameters(response.data);\n\n        // Initialize form values\n        const initialValues = {};\n        response.data.forEach(param => {\n          initialValues[param.id] = '';\n        });\n        setFormValues(initialValues);\n      } catch (error) {\n        console.error('Error fetching parameters:', error);\n        setError('Failed to load document parameters');\n      } finally {\n        setParametersLoading(false);\n      }\n    };\n    fetchParameters();\n  }, [selectedType]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    setGeneratedDocument(null);\n    setLoading(true);\n    try {\n      const response = await axios.post('/api/documents/generate', {\n        document_type: selectedType,\n        parameters: formValues,\n        user_id: currentUser === null || currentUser === void 0 ? void 0 : currentUser.user_id\n      });\n      setSuccess('Document generated successfully!');\n      setGeneratedDocument(response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error generating document:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to generate document');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Legal Document Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }, this), !generatedDocument ? /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Document Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), typesLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                animation: \"border\",\n                size: \"sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ms-2\",\n                children: \"Loading document types...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Form.Select, {\n              value: selectedType,\n              onChange: e => setSelectedType(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a document type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this), documentTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type.id,\n                children: type.name\n              }, type.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), parametersLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ms-2\",\n              children: \"Loading parameters...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [parameters.map(param => /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: param.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: param.id,\n                value: formValues[param.id] || '',\n                onChange: handleInputChange,\n                required: param.required\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 23\n              }, this)]\n            }, param.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this)), parameters.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              disabled: loading,\n              children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                  animation: \"border\",\n                  size: \"sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ms-2\",\n                  children: \"Generating...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true) : 'Generate Document'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: generatedDocument.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          size: \"sm\",\n          onClick: () => setGeneratedDocument(null),\n          children: \"Create Another Document\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"document-content\",\n          style: {\n            whiteSpace: 'pre-wrap'\n          },\n          children: generatedDocument.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentGenerator, \"NnrO4Z9/3wUapN382etHiTXbIrI=\");\n_c = DocumentGenerator;\nexport default DocumentGenerator;\nvar _c;\n$RefreshReg$(_c, \"DocumentGenerator\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Form","Button","Card","Alert","Spinner","axios","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","DocumentGenerator","_s","documentTypes","setDocumentTypes","selectedType","setSelectedType","parameters","setParameters","formValues","setFormValues","loading","setLoading","typesLoading","setTypesLoading","parametersLoading","setParametersLoading","error","setError","success","setSuccess","generatedDocument","setGeneratedDocument","currentUser","fetchDocumentTypes","response","get","data","console","fetchParameters","initialValues","forEach","param","id","handleInputChange","e","name","value","target","prev","handleSubmit","preventDefault","post","document_type","user_id","_error$response","_error$response$data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","Body","onSubmit","Group","Label","animation","size","Select","onChange","required","map","type","Control","length","disabled","Header","title","onClick","style","whiteSpace","content","_c","$RefreshReg$"],"sources":["/Users/jessicagoel/LegallyCoded-2/lexiai/frontend/src/components/documents/DocumentGenerator.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Form, Button, Card, Alert, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport { AuthContext } from '../../context/AuthContext';\n\nconst DocumentGenerator = () => {\n  const [documentTypes, setDocumentTypes] = useState([]);\n  const [selectedType, setSelectedType] = useState('');\n  const [parameters, setParameters] = useState([]);\n  const [formValues, setFormValues] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [typesLoading, setTypesLoading] = useState(true);\n  const [parametersLoading, setParametersLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [generatedDocument, setGeneratedDocument] = useState(null);\n  \n  const { currentUser } = useContext(AuthContext);\n\n  // Fetch document types on component mount\n  useEffect(() => {\n    const fetchDocumentTypes = async () => {\n      try {\n        const response = await axios.get('/api/documents/types');\n        setDocumentTypes(response.data);\n      } catch (error) {\n        console.error('Error fetching document types:', error);\n        setError('Failed to load document types');\n      } finally {\n        setTypesLoading(false);\n      }\n    };\n    \n    fetchDocumentTypes();\n  }, []);\n\n  // Fetch parameters when document type is selected\n  useEffect(() => {\n    if (!selectedType) return;\n    \n    const fetchParameters = async () => {\n      setParametersLoading(true);\n      try {\n        const response = await axios.get(`/api/documents/parameters/${selectedType}`);\n        setParameters(response.data);\n        \n        // Initialize form values\n        const initialValues = {};\n        response.data.forEach(param => {\n          initialValues[param.id] = '';\n        });\n        setFormValues(initialValues);\n      } catch (error) {\n        console.error('Error fetching parameters:', error);\n        setError('Failed to load document parameters');\n      } finally {\n        setParametersLoading(false);\n      }\n    };\n    \n    fetchParameters();\n  }, [selectedType]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    setError('');\n    setSuccess('');\n    setGeneratedDocument(null);\n    setLoading(true);\n    \n    try {\n      const response = await axios.post('/api/documents/generate', {\n        document_type: selectedType,\n        parameters: formValues,\n        user_id: currentUser?.user_id\n      });\n      \n      setSuccess('Document generated successfully!');\n      setGeneratedDocument(response.data);\n    } catch (error) {\n      console.error('Error generating document:', error);\n      setError(error.response?.data?.error || 'Failed to generate document');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"mb-4\">Legal Document Generator</h2>\n      \n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      {success && <Alert variant=\"success\">{success}</Alert>}\n      \n      {!generatedDocument ? (\n        <Card>\n          <Card.Body>\n            <Form onSubmit={handleSubmit}>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Document Type</Form.Label>\n                {typesLoading ? (\n                  <div className=\"d-flex align-items-center\">\n                    <Spinner animation=\"border\" size=\"sm\" />\n                    <span className=\"ms-2\">Loading document types...</span>\n                  </div>\n                ) : (\n                  <Form.Select\n                    value={selectedType}\n                    onChange={(e) => setSelectedType(e.target.value)}\n                    required\n                  >\n                    <option value=\"\">Select a document type</option>\n                    {documentTypes.map(type => (\n                      <option key={type.id} value={type.id}>{type.name}</option>\n                    ))}\n                  </Form.Select>\n                )}\n              </Form.Group>\n              \n              {parametersLoading ? (\n                <div className=\"d-flex align-items-center\">\n                  <Spinner animation=\"border\" size=\"sm\" />\n                  <span className=\"ms-2\">Loading parameters...</span>\n                </div>\n              ) : (\n                <>\n                  {parameters.map(param => (\n                    <Form.Group key={param.id} className=\"mb-3\">\n                      <Form.Label>{param.name}</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name={param.id}\n                        value={formValues[param.id] || ''}\n                        onChange={handleInputChange}\n                        required={param.required}\n                      />\n                    </Form.Group>\n                  ))}\n                  \n                  {parameters.length > 0 && (\n                    <Button \n                      variant=\"primary\" \n                      type=\"submit\" \n                      disabled={loading}\n                    >\n                      {loading ? (\n                        <>\n                          <Spinner animation=\"border\" size=\"sm\" />\n                          <span className=\"ms-2\">Generating...</span>\n                        </>\n                      ) : (\n                        'Generate Document'\n                      )}\n                    </Button>\n                  )}\n                </>\n              )}\n            </Form>\n          </Card.Body>\n        </Card>\n      ) : (\n        <Card>\n          <Card.Header className=\"d-flex justify-content-between align-items-center\">\n            <div>{generatedDocument.title}</div>\n            <Button \n              variant=\"outline-primary\" \n              size=\"sm\"\n              onClick={() => setGeneratedDocument(null)}\n            >\n              Create Another Document\n            </Button>\n          </Card.Header>\n          <Card.Body>\n            <pre className=\"document-content\" style={{ whiteSpace: 'pre-wrap' }}>\n              {generatedDocument.content}\n            </pre>\n          </Card.Body>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default DocumentGenerator; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,OAAO,QAAQ,iBAAiB;AACpE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC4B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC8B,KAAK,EAAEC,QAAQ,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgC,OAAO,EAAEC,UAAU,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EAEhE,MAAM;IAAEoC;EAAY,CAAC,GAAGlC,UAAU,CAACO,WAAW,CAAC;;EAE/C;EACAR,SAAS,CAAC,MAAM;IACd,MAAMoC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,sBAAsB,CAAC;QACxDtB,gBAAgB,CAACqB,QAAQ,CAACE,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOV,KAAK,EAAE;QACdW,OAAO,CAACX,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDC,QAAQ,CAAC,+BAA+B,CAAC;MAC3C,CAAC,SAAS;QACRJ,eAAe,CAAC,KAAK,CAAC;MACxB;IACF,CAAC;IAEDU,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACApC,SAAS,CAAC,MAAM;IACd,IAAI,CAACiB,YAAY,EAAE;IAEnB,MAAMwB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClCb,oBAAoB,CAAC,IAAI,CAAC;MAC1B,IAAI;QACF,MAAMS,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,6BAA6BrB,YAAY,EAAE,CAAC;QAC7EG,aAAa,CAACiB,QAAQ,CAACE,IAAI,CAAC;;QAE5B;QACA,MAAMG,aAAa,GAAG,CAAC,CAAC;QACxBL,QAAQ,CAACE,IAAI,CAACI,OAAO,CAACC,KAAK,IAAI;UAC7BF,aAAa,CAACE,KAAK,CAACC,EAAE,CAAC,GAAG,EAAE;QAC9B,CAAC,CAAC;QACFvB,aAAa,CAACoB,aAAa,CAAC;MAC9B,CAAC,CAAC,OAAOb,KAAK,EAAE;QACdW,OAAO,CAACX,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDC,QAAQ,CAAC,oCAAoC,CAAC;MAChD,CAAC,SAAS;QACRF,oBAAoB,CAAC,KAAK,CAAC;MAC7B;IACF,CAAC;IAEDa,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACxB,YAAY,CAAC,CAAC;EAElB,MAAM6B,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC5B,aAAa,CAAC6B,IAAI,KAAK;MACrB,GAAGA,IAAI;MACP,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAElBvB,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IACdE,oBAAoB,CAAC,IAAI,CAAC;IAC1BV,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAM9B,KAAK,CAAC+C,IAAI,CAAC,yBAAyB,EAAE;QAC3DC,aAAa,EAAEtC,YAAY;QAC3BE,UAAU,EAAEE,UAAU;QACtBmC,OAAO,EAAErB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEqB;MACxB,CAAC,CAAC;MAEFxB,UAAU,CAAC,kCAAkC,CAAC;MAC9CE,oBAAoB,CAACG,QAAQ,CAACE,IAAI,CAAC;IACrC,CAAC,CAAC,OAAOV,KAAK,EAAE;MAAA,IAAA4B,eAAA,EAAAC,oBAAA;MACdlB,OAAO,CAACX,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDC,QAAQ,CAAC,EAAA2B,eAAA,GAAA5B,KAAK,CAACQ,QAAQ,cAAAoB,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBlB,IAAI,cAAAmB,oBAAA,uBAApBA,oBAAA,CAAsB7B,KAAK,KAAI,6BAA6B,CAAC;IACxE,CAAC,SAAS;MACRL,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEd,OAAA;IAAAiD,QAAA,gBACEjD,OAAA;MAAIkD,SAAS,EAAC,MAAM;MAAAD,QAAA,EAAC;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEjDnC,KAAK,iBAAInB,OAAA,CAACL,KAAK;MAAC4D,OAAO,EAAC,QAAQ;MAAAN,QAAA,EAAE9B;IAAK;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChDjC,OAAO,iBAAIrB,OAAA,CAACL,KAAK;MAAC4D,OAAO,EAAC,SAAS;MAAAN,QAAA,EAAE5B;IAAO;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAErD,CAAC/B,iBAAiB,gBACjBvB,OAAA,CAACN,IAAI;MAAAuD,QAAA,eACHjD,OAAA,CAACN,IAAI,CAAC8D,IAAI;QAAAP,QAAA,eACRjD,OAAA,CAACR,IAAI;UAACiE,QAAQ,EAAEf,YAAa;UAAAO,QAAA,gBAC3BjD,OAAA,CAACR,IAAI,CAACkE,KAAK;YAACR,SAAS,EAAC,MAAM;YAAAD,QAAA,gBAC1BjD,OAAA,CAACR,IAAI,CAACmE,KAAK;cAAAV,QAAA,EAAC;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,EACrCvC,YAAY,gBACXf,OAAA;cAAKkD,SAAS,EAAC,2BAA2B;cAAAD,QAAA,gBACxCjD,OAAA,CAACJ,OAAO;gBAACgE,SAAS,EAAC,QAAQ;gBAACC,IAAI,EAAC;cAAI;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACxCtD,OAAA;gBAAMkD,SAAS,EAAC,MAAM;gBAAAD,QAAA,EAAC;cAAyB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpD,CAAC,gBAENtD,OAAA,CAACR,IAAI,CAACsE,MAAM;cACVvB,KAAK,EAAEhC,YAAa;cACpBwD,QAAQ,EAAG1B,CAAC,IAAK7B,eAAe,CAAC6B,CAAC,CAACG,MAAM,CAACD,KAAK,CAAE;cACjDyB,QAAQ;cAAAf,QAAA,gBAERjD,OAAA;gBAAQuC,KAAK,EAAC,EAAE;gBAAAU,QAAA,EAAC;cAAsB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAC/CjD,aAAa,CAAC4D,GAAG,CAACC,IAAI,iBACrBlE,OAAA;gBAAsBuC,KAAK,EAAE2B,IAAI,CAAC/B,EAAG;gBAAAc,QAAA,EAAEiB,IAAI,CAAC5B;cAAI,GAAnC4B,IAAI,CAAC/B,EAAE;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAqC,CAC1D,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACS,CACd;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACS,CAAC,EAEZrC,iBAAiB,gBAChBjB,OAAA;YAAKkD,SAAS,EAAC,2BAA2B;YAAAD,QAAA,gBACxCjD,OAAA,CAACJ,OAAO;cAACgE,SAAS,EAAC,QAAQ;cAACC,IAAI,EAAC;YAAI;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACxCtD,OAAA;cAAMkD,SAAS,EAAC,MAAM;cAAAD,QAAA,EAAC;YAAqB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC,gBAENtD,OAAA,CAAAE,SAAA;YAAA+C,QAAA,GACGxC,UAAU,CAACwD,GAAG,CAAC/B,KAAK,iBACnBlC,OAAA,CAACR,IAAI,CAACkE,KAAK;cAAgBR,SAAS,EAAC,MAAM;cAAAD,QAAA,gBACzCjD,OAAA,CAACR,IAAI,CAACmE,KAAK;gBAAAV,QAAA,EAAEf,KAAK,CAACI;cAAI;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa,CAAC,eACrCtD,OAAA,CAACR,IAAI,CAAC2E,OAAO;gBACXD,IAAI,EAAC,MAAM;gBACX5B,IAAI,EAAEJ,KAAK,CAACC,EAAG;gBACfI,KAAK,EAAE5B,UAAU,CAACuB,KAAK,CAACC,EAAE,CAAC,IAAI,EAAG;gBAClC4B,QAAQ,EAAE3B,iBAAkB;gBAC5B4B,QAAQ,EAAE9B,KAAK,CAAC8B;cAAS;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B,CAAC;YAAA,GARapB,KAAK,CAACC,EAAE;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASb,CACb,CAAC,EAED7C,UAAU,CAAC2D,MAAM,GAAG,CAAC,iBACpBpE,OAAA,CAACP,MAAM;cACL8D,OAAO,EAAC,SAAS;cACjBW,IAAI,EAAC,QAAQ;cACbG,QAAQ,EAAExD,OAAQ;cAAAoC,QAAA,EAEjBpC,OAAO,gBACNb,OAAA,CAAAE,SAAA;gBAAA+C,QAAA,gBACEjD,OAAA,CAACJ,OAAO;kBAACgE,SAAS,EAAC,QAAQ;kBAACC,IAAI,EAAC;gBAAI;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACxCtD,OAAA;kBAAMkD,SAAS,EAAC,MAAM;kBAAAD,QAAA,EAAC;gBAAa;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA,eAC3C,CAAC,GAEH;YACD;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK,CACT;UAAA,eACD,CACH;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,gBAEPtD,OAAA,CAACN,IAAI;MAAAuD,QAAA,gBACHjD,OAAA,CAACN,IAAI,CAAC4E,MAAM;QAACpB,SAAS,EAAC,mDAAmD;QAAAD,QAAA,gBACxEjD,OAAA;UAAAiD,QAAA,EAAM1B,iBAAiB,CAACgD;QAAK;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpCtD,OAAA,CAACP,MAAM;UACL8D,OAAO,EAAC,iBAAiB;UACzBM,IAAI,EAAC,IAAI;UACTW,OAAO,EAAEA,CAAA,KAAMhD,oBAAoB,CAAC,IAAI,CAAE;UAAAyB,QAAA,EAC3C;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACdtD,OAAA,CAACN,IAAI,CAAC8D,IAAI;QAAAP,QAAA,eACRjD,OAAA;UAAKkD,SAAS,EAAC,kBAAkB;UAACuB,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAW,CAAE;UAAAzB,QAAA,EACjE1B,iBAAiB,CAACoD;QAAO;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClD,EAAA,CAzLID,iBAAiB;AAAAyE,EAAA,GAAjBzE,iBAAiB;AA2LvB,eAAeA,iBAAiB;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}